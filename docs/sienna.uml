@startuml

skinparam shadowing false
left to right direction

namespace Emergency {
  interface IEmergency {
    --
    + tx SetEmergency (s: EmergencyStatus)
    --
    + q GetEmergency ()
    --
    + fn is_normal_operation (state)?
    + fn is_emergency (state)?
    --
    + fn set_emergency (state, reason)
  }
  enum EmergencyStatus {
    + NoEmergency
    + Emergency<Reason>
    + ContractDisabled<Reason>
  }
}

namespace Administrated {
  interface IAdministrated {
    - state a: Option<Admin>
    - state p: IsAdminPublic
    --
    - tx SetAdmin (a: Admin, p: IsAdminPublic)
    - tx RemoveAdmin ()
    --
    + q GetAdmin ()
    --
    + fn is_admin (deps)
  }
}

namespace Vesting {
  interface IClaimable {
    - tx Claim ()
  }
  
  interface ISchedule {
    - state l: LaunchDate
    - state h: ClaimHistory
    - state s: Schedule
    --
    + q Status ()
    + q Schedule ()
    + q Progress ()
    --
    - tx Configure ()
    - tx Launch ()
    - tx AddAccount ()
  }

  interface ISplitPortion {
    - state m: IClaimable
    - state c: Config
    - state p: Portion
    --
    + q Status ()
    --
    - tx Configure ()
    - tx Vest ()
  }
  
  interface ITokenLink {
    - state t: Token
    --
    + q GetToken ()
    --
    - tx SetToken ()
  }
}

namespace TGE {
  class SIENNA {}
  SIENNA -> SNIP20

  class MGMT {}
  MGMT -r-> Vesting.ITokenLink
  MGMT -r-> Vesting.ISchedule
  MGMT -r-> Vesting.IClaimable

  class RPT {}
  RPT -r-> Vesting.ITokenLink
  RPT -r-> Vesting.ISplitPortion
}

namespace SNIP20 {
  interface IMint {
    - tx AddMinters ()
    - tx RemoveMinters ()
    - tx SetMinters ()
    - tx Mint ()
    - tx Burn ()
    - tx BurnFrom ()
  }
  interface IDeposit {
    - tx Deposit (padding)
    - tx Redeem (amount, denom, padding)
  }
  interface IViewingKeys {
    - tx CreateViewingKey (entropy, padding)
    - tx SetViewingKey (entropy, padding)
  }
  interface ITransfers {
    - tx Transfer (recipient, amount, padding)
    - tx Send (recipient, amount, msg, padding)
    - tx SendFrom (owner, recipient, amount, msg, padding)
    - tx RegisterReceive (code_hash, padding)
  }
  interface IAllowance {
    - tx IncreaseAllowance (spender, amount, expiration, padding)
    - tx DecreaseAllowance (spender, amount, expiration, padding)
  }
  interface IAdmin {
    - tx ChangeAdmin ()
  }
  interface IContractStatus {
    - tx SetContractStatus ()
  }
}

namespace AMM {
  class Factory {}
  class Pair {}
  class LPToken {}
  LPToken -> SNIP20
}

namespace Rewards {
  class WeightMaster {}
  class GovernanceToken {}
  class CashbackMinter {}
  class Cashback {}
  class LPStaking {}
}

@enduml
