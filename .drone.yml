kind: pipeline
type: docker
name: Smart Contract Build, Test And Coverage
volumes: [ { name: cache, host: { path: /var/lib/drone/sienna-cache } } ]
steps:

  # Repo setup #####################################################################################

  # Clone submodules.
  # The main repo is cloned automatically, but,
  # in order to clone the submodules, an SSH key is needed.
  - name:        submodules
    image:       alpine/git
    environment: { DRONE_KEY: { from_secret: drone_key } }
    commands:
    #
    # Deploy the service account's private key from org secrets.
    # This needs to be set up in two places:
    #   0. Generate a ssh key locally with `ssh-keygen -t rsa` (ed25519 seems not to work)
    #   1. Private key goes into organization secrets.
    #   2. Public key goes into service account public keys.
    #   3. Delete the generated SSH key from your local filesystem.
    #
    - pwd
    - ls -al
    #- mkdir -p ~/.ssh
    #- printenv DRONE_KEY > ~/.ssh/id_rsa
    #- chmod 0600 ~/.ssh/id_rsa
    #- ssh-keyscan git.sienna.network >> ~/.ssh/known_hosts
    - git submodule update --init

  # Phase 1. Rust. Build smart contracts. ##########################################################

  - name: build-and-test
    depends_on: [ submodules ]
    image: rust:1.59-slim
    environment: 
      COVERAGE_KEY: { from_secret: coverage_key }
      CARGO_HOME: /drone/src/.cargo-home
    commands:
    - cargo --version
    - rustc --version
    - cargo build
    #- cargo test
    - pwd
    - ls -al
    - echo $HOME
    - ls -al $HOME
    - export

  # Phase 2. TypeScript. Contract deployment and operations. #######################################

  # Install dependencies and make sure ops scripts work
  - name:  pnpm-deps
    depends_on: [ submodules ]
    image: node:14-slim
    commands:
      - npm i -g pnpm
      - pnpm i --unsafe-perm

  # Run tests
  - name:  pnpm-test
    depends_on: [ pnpm-deps ]
    image: node:14-slim
    commands:
      - cat package.json
      - npm i -g pnpm
      - pnpm build
      - pnpm deploy
      - pnpm test
