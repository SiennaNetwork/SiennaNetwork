kind: pipeline
type: docker
name: Smart Contract Build, Test And Coverage
volumes: [ { name: cache, host: { path: /var/lib/drone/sienna-cache } } ]
steps:

  # Phase 0. Clone submodules recursively. #########################################################
  # Only public HTTP submodules are supported
  # (Because cloning over SSH requires a whole song and dance routine with the deploy keys)
  # So make sure that `.gitmodules` only contains HTTP module URLs.
  - name:  submodules
    image: alpine/git
    commands:
    - git submodule update --init --recursive

  # Phase 1. Rust. Build and test smart contracts. #################################################
  - name: contracts
    depends_on: [ submodules ]
    image: rust:1.59-slim
    environment: 
      COVERAGE_KEY: { from_secret: coverage_key }
      CARGO_HOME: /drone/src/.cargo-home
    commands:
    - cargo --version
    - rustc --version
    - cargo build
    #- cargo test
    - pwd
    - ls -al
    - echo $HOME
    - ls -al $HOME
    - export

  # Phase 2. TypeScript. Make sure the deploy scripts work. ########################################
  - name:  scripts
    depends_on: [ submodules ]
    image: node:16-slim
    commands:
      - npm i -g pnpm
      - pnpm --version
      - pnpm i --unsafe-perm
      - ls -al
      - cat package.json
      - pnpm build
      - pnpm deploy
      - pnpm test
