on: [push, pull_request]
name: SIENNA
jobs:

  docs:
    name: Generate Rust documentation
    runs-on: ubuntu-latest
    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          {
            profile: minimal,
            toolchain: 1.49.0,
            target: wasm32-unknown-unknown,
            override: true,
          }
      - name: Checkout sources
        uses: actions/checkout@v2
        with: { submodules: true }
      - uses: Swatinem/rust-cache@v1
      - name: Generate documentation
        run: cargo doc

  schema:
    name: Generate API schema of all contracts
    runs-on: ubuntu-latest
    steps:
      - name: Install Node and Yarn
        uses: actions/setup-node@v2
        with: { node-version: "14.x" }

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          {
            profile: minimal,
            toolchain: 1.49.0,
            target: wasm32-unknown-unknown,
            override: true,
          }

      - name: Checkout sources
        uses: actions/checkout@v2
        with: { submodules: true }

      - name: Checkout deps of deps
        run:
          cd libraries/fadroma-next
          git submodule init
          git submodule update
          cd ../..

      - name: Cache Cargo crates
        uses: Swatinem/rust-cache@v1

      - name: Cache PNPM modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - name: Install PNPM and project dependencies
        uses: pnpm/action-setup@v2.0.1
        with: { version: 6.0.2, run_install: true }

      - name: Generate schema
        run: pnpm dev schema

  coverage:
    name: Run unit tests and publish coverage report
    runs-on: ubuntu-latest
    steps:
      - name: Install Node and Yarn
        uses: actions/setup-node@v2
        with: { node-version: "14.x" }

      - name: Install toolchain that works with Tarpaulin
        uses: actions-rs/toolchain@v1
        with:
          {
            profile: minimal,
            toolchain: stable,
            target: wasm32-unknown-unknown,
            override: true,
          }
      - uses: Swatinem/rust-cache@v1

      - name: Checkout sources
        uses: actions/checkout@v2
        with: { submodules: true }

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.18.3'
          args: '--workspace --coveralls ${{secrets.COVERALLS_REPO_TOKEN}}'
