name: Lend
on: [push, pull_request]
jobs:
  atoken:
    name: contracts/lend-atoken-experimental
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: contracts/lend-atoken-experimental } }
    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with: { profile: minimal, toolchain: nightly, target: wasm32-unknown-unknown, override: true }
      - name: Checkout sources
        uses: actions/checkout@v2
        with: { submodules: true }
      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with: { command: test, args: --locked }
        env: { RUST_BACKTRACE: 1, RUSTFLAGS: -Zmacro-backtrace }
  config:
    name: contracts/lend-configuration
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: contracts/lend-configuration } }
    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with: { profile: minimal, toolchain: nightly, target: wasm32-unknown-unknown, override: true }
      - name: Checkout sources
        uses: actions/checkout@v2
        with: { submodules: true }
      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with: { command: test, args: --locked }
        env: { RUST_BACKTRACE: 1, RUSTFLAGS: -Zmacro-backtrace }
  snip20:
    name: contracts/snip20-lend-experimental
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: contracts/snip20-lend-experimental } }
    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with: { profile: minimal, toolchain: nightly, target: wasm32-unknown-unknown, override: true }
      - name: Checkout sources
        uses: actions/checkout@v2
        with: { submodules: true }
      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with: { command: test, args: --locked }
        env: { RUST_BACKTRACE: 1, RUSTFLAGS: -Zmacro-backtrace }
