/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type HandleMsg =
  | {
      receive: {
        amount: Uint128;
        from: HumanAddr;
        msg?: Binary | null;
        sender: HumanAddr;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      redeem_token: {
        burn_amount: Uint256;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      redeem_underlying: {
        receive_amount: Uint256;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      borrow: {
        amount: Uint256;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      transfer: {
        amount: Uint256;
        recipient: HumanAddr;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      accrue_interest: {
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      seize: {
        amount: Uint256;
        borrower: HumanAddr;
        liquidator: HumanAddr;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      update_config: {
        borrow_cap?: Uint256 | null;
        interest_model?: ContractLink | null;
        reserve_factor?: Decimal256 | null;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      reduce_reserves: {
        amount: Uint128;
        to?: HumanAddr | null;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      create_viewing_key: {
        entropy: string;
        padding?: string | null;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      set_viewing_key: {
        key: string;
        padding?: string | null;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      admin: HandleMsg1;
      [k: string]: unknown;
    }
  | {
      killswitch: HandleMsg1;
      [k: string]: unknown;
    };
export type Uint128 = string;
export type HumanAddr = string;
/**
 * Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.
 *
 * This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>
 */
export type Binary = string;
export type Uint256 = string;
/**
 * A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0 The greatest possible value that can be represented is 115792089237316195423570985008687907853269984665640564039457.584007913129639935 (which is (2^128 - 1) / 10^18)
 */
export type Decimal256 = string;
export type HandleMsg1 =
  | {
      change_admin: {
        address: HumanAddr;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      accept_admin: {
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };

/**
 * Info needed to talk to a contract instance.
 */
export interface ContractLink {
  address: HumanAddr;
  code_hash: string;
}
