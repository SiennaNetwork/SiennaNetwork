/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type HumanAddr = string;
/**
 * Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.
 *
 * This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>
 */
export type Binary = string;
/**
 * A fixed-point decimal value with 18 fractional digits, i.e. Decimal256(1_000_000_000_000_000_000) == 1.0 The greatest possible value that can be represented is 115792089237316195423570985008687907853269984665640564039457.584007913129639935 (which is (2^128 - 1) / 10^18)
 */
export type Decimal256 = string;
/**
 * A single viewing key that is shared throughout the protocol so that private data can be viewied internally.
 */
export type MasterKey = ViewingKey;
export type ViewingKey = string;

export interface InitMsg {
  admin: HumanAddr;
  callback: Callback;
  config: Config;
  entropy: Binary;
  interest_model_contract: ContractLink;
  key: MasterKey;
  prng_seed: Binary;
  underlying_asset: ContractLink;
}
/**
 * Info needed to have the other contract respond.
 */
export interface Callback {
  /**
   * Info about the contract requesting the callback.
   */
  contract: ContractLink;
  /**
   * The message to call.
   */
  msg: Binary;
}
/**
 * Info needed to talk to a contract instance.
 */
export interface ContractLink {
  address: HumanAddr;
  code_hash: string;
}
export interface Config {
  /**
   * Initial exchange rate used when minting the first slTokens (used when totalSupply = 0)
   */
  initial_exchange_rate: Decimal256;
  /**
   * Fraction of interest currently set aside for reserves
   */
  reserve_factor: Decimal256;
  /**
   * Share of seized collateral that is added to reserves
   */
  seize_factor: Decimal256;
}
