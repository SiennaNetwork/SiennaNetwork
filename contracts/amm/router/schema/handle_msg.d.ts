/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type HandleMsg =
  | {
      receive: {
        amount: Uint128;
        from: HumanAddr;
        msg?: Binary | null;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      finalize_route: {
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      register_tokens: {
        tokens: TokenType[];
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      recover_funds: {
        amount: Uint128;
        snip20_send_msg?: Binary | null;
        to: HumanAddr;
        token: TokenType;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      update_settings: {
        new_owner?: HumanAddr | null;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
export type Uint128 = string;
export type HumanAddr = string;
/**
 * Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.
 *
 * This is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>
 */
export type Binary = string;
export type TokenType =
  | {
      custom_token: {
        contract_addr: HumanAddr;
        token_code_hash: string;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      native_token: {
        denom: string;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
