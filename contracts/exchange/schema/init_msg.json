{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InitMsg",
  "type": "object",
  "required": [
    "callback",
    "entropy",
    "factory_info",
    "lp_token_contract",
    "pair",
    "prng_seed"
  ],
  "properties": {
    "callback": {
      "$ref": "#/definitions/Callback_for_HumanAddr"
    },
    "entropy": {
      "$ref": "#/definitions/Binary"
    },
    "factory_info": {
      "description": "Used by the exchange contract to send back its address to the factory on init",
      "allOf": [
        {
          "$ref": "#/definitions/ContractLink_for_HumanAddr"
        }
      ]
    },
    "lp_token_contract": {
      "description": "LP token instantiation info",
      "allOf": [
        {
          "$ref": "#/definitions/ContractInstantiationInfo"
        }
      ]
    },
    "pair": {
      "description": "The tokens that will be managed by the exchange",
      "allOf": [
        {
          "$ref": "#/definitions/TokenPair_for_HumanAddr"
        }
      ]
    },
    "prng_seed": {
      "$ref": "#/definitions/Binary"
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Callback_for_HumanAddr": {
      "description": "Info needed to have the other contract respond.",
      "type": "object",
      "required": [
        "contract",
        "msg"
      ],
      "properties": {
        "contract": {
          "description": "Info about the contract requesting the callback.",
          "allOf": [
            {
              "$ref": "#/definitions/ContractLink_for_HumanAddr"
            }
          ]
        },
        "msg": {
          "description": "The message to call.",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        }
      }
    },
    "ContractInstantiationInfo": {
      "description": "Info needed to instantiate a contract.",
      "type": "object",
      "required": [
        "code_hash",
        "id"
      ],
      "properties": {
        "code_hash": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "ContractLink_for_HumanAddr": {
      "description": "Info needed to talk to a contract instance.",
      "type": "object",
      "required": [
        "address",
        "code_hash"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/HumanAddr"
        },
        "code_hash": {
          "type": "string"
        }
      }
    },
    "HumanAddr": {
      "type": "string"
    },
    "TokenPair_for_HumanAddr": {
      "type": "array",
      "items": [
        {
          "$ref": "#/definitions/TokenType_for_HumanAddr"
        },
        {
          "$ref": "#/definitions/TokenType_for_HumanAddr"
        }
      ],
      "maxItems": 2,
      "minItems": 2
    },
    "TokenType_for_HumanAddr": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "custom_token"
          ],
          "properties": {
            "custom_token": {
              "type": "object",
              "required": [
                "contract_addr",
                "token_code_hash"
              ],
              "properties": {
                "contract_addr": {
                  "$ref": "#/definitions/HumanAddr"
                },
                "token_code_hash": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "type": "object",
          "required": [
            "native_token"
          ],
          "properties": {
            "native_token": {
              "type": "object",
              "required": [
                "denom"
              ],
              "properties": {
                "denom": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
    }
  }
}
