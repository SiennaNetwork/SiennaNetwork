/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Handle =
  | {
      set_status: {
        level: ContractStatusLevel;
        new_address?: HumanAddr | null;
        reason: string;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      set_owner: {
        new_admin: HumanAddr;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      configure: {
        config: LinearMapFor_HumanAddrAnd_Uint128;
        [k: string]: unknown;
      };
      [k: string]: unknown;
    }
  | {
      vest: {
        [k: string]: unknown;
      };
      [k: string]: unknown;
    };
export type ContractStatusLevel = "Operational" | "Paused" | "Migrating";
export type HumanAddr = string;
export type Uint128 = string;
/**
 * Just a wrapped `Vec` with `get` and `insert` methods.
 *
 * Acts as a KV map but serializes as an array of [K,V] pairs: * new keys are appended to the end, existing keys are updated in place * there is no check for keys being unique during deserialization * in case of duplicate keys, it's the 1st instance of a given key that "counts".
 *
 * It's like this because `serde_json_wasm` doesn't serialize maps (`HashMap`, `BTreeMap`). This is true even in versions more recent than the default for SecretNetwork: the `serialize_map` method contains a single `unreachable!()` panic. It's not immediately obvious why this remains the case the case; perhaps iterating over of those is somehow more expensive on a blockchain? In any case, in the absence of gas benchmarks it's pointless to risk altering the default execution environment (of which `serde_json_wasm` is part), even though there's no obvious reason why that wouldn't work.
 */
export type LinearMapFor_HumanAddrAnd_Uint128 = [HumanAddr, Uint128][];
