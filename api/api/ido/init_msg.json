{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InitMsg",
  "type": "object",
  "required": [
    "admin",
    "callback",
    "info"
  ],
  "properties": {
    "admin": {
      "description": "Should be the address of the original sender, since this is initiated by the factory.",
      "allOf": [
        {
          "$ref": "#/definitions/HumanAddr"
        }
      ]
    },
    "callback": {
      "description": "Used by the IDO to register itself with the factory.",
      "allOf": [
        {
          "$ref": "#/definitions/Callback_for_HumanAddr"
        }
      ]
    },
    "info": {
      "$ref": "#/definitions/TokenSaleConfig"
    }
  },
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "Callback_for_HumanAddr": {
      "description": "Info needed to have the other contract respond.",
      "type": "object",
      "required": [
        "contract",
        "msg"
      ],
      "properties": {
        "contract": {
          "description": "Info about the contract requesting the callback.",
          "allOf": [
            {
              "$ref": "#/definitions/ContractInstance_for_HumanAddr"
            }
          ]
        },
        "msg": {
          "description": "The message to call.",
          "allOf": [
            {
              "$ref": "#/definitions/Binary"
            }
          ]
        }
      }
    },
    "ContractInstance_for_HumanAddr": {
      "description": "Info needed to talk to a contract instance.",
      "type": "object",
      "required": [
        "address",
        "code_hash"
      ],
      "properties": {
        "address": {
          "$ref": "#/definitions/HumanAddr"
        },
        "code_hash": {
          "type": "string"
        }
      }
    },
    "HumanAddr": {
      "type": "string"
    },
    "TokenSaleConfig": {
      "type": "object",
      "required": [
        "input_token",
        "max_allocation",
        "max_seats",
        "min_allocation",
        "rate",
        "sold_token",
        "whitelist"
      ],
      "properties": {
        "end_time": {
          "description": "Time when the sale will end",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "entropy": {
          "description": "Entropy for creating viewkey",
          "anyOf": [
            {
              "$ref": "#/definitions/Binary"
            },
            {
              "type": "null"
            }
          ]
        },
        "input_token": {
          "description": "The token that will be used to buy the SNIP20.",
          "allOf": [
            {
              "$ref": "#/definitions/TokenType_for_HumanAddr"
            }
          ]
        },
        "max_allocation": {
          "description": "The total amount that each participant is allowed to buy.",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "max_seats": {
          "description": "The maximum number of participants allowed.",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "min_allocation": {
          "description": "The minimum amount that each participant is allowed to buy.",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "prng_seed": {
          "description": "Seed for creating viewkey",
          "anyOf": [
            {
              "$ref": "#/definitions/Binary"
            },
            {
              "type": "null"
            }
          ]
        },
        "rate": {
          "description": "The price for a single token.",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "sold_token": {
          "$ref": "#/definitions/ContractInstance_for_HumanAddr"
        },
        "start_time": {
          "description": "Time when the sale will start (if None, it will start immediately)",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 0.0
        },
        "whitelist": {
          "description": "The addresses that are eligible to participate in the sale.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HumanAddr"
          }
        }
      }
    },
    "TokenType_for_HumanAddr": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "custom_token"
          ],
          "properties": {
            "custom_token": {
              "type": "object",
              "required": [
                "contract_addr",
                "token_code_hash"
              ],
              "properties": {
                "contract_addr": {
                  "$ref": "#/definitions/HumanAddr"
                },
                "token_code_hash": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "type": "object",
          "required": [
            "native_token"
          ],
          "properties": {
            "native_token": {
              "type": "object",
              "required": [
                "denom"
              ],
              "properties": {
                "denom": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
    },
    "Uint128": {
      "type": "string"
    }
  }
}
