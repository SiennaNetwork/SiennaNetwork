{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "HandleMsg",
  "anyOf": [
    {
      "description": "Set pause/migration status",
      "type": "object",
      "required": [
        "set_status"
      ],
      "properties": {
        "set_status": {
          "type": "object",
          "required": [
            "level",
            "reason"
          ],
          "properties": {
            "level": {
              "$ref": "#/definitions/ContractStatusLevel"
            },
            "new_address": {
              "anyOf": [
                {
                  "$ref": "#/definitions/HumanAddr"
                },
                {
                  "type": "null"
                }
              ]
            },
            "reason": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "description": "Set contract templates and exchange settings. Admin only command.",
      "type": "object",
      "required": [
        "set_config"
      ],
      "properties": {
        "set_config": {
          "type": "object",
          "properties": {
            "exchange_settings": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ExchangeSettings_for_HumanAddr"
                },
                {
                  "type": "null"
                }
              ]
            },
            "ido_contract": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ContractInstantiationInfo"
                },
                {
                  "type": "null"
                }
              ]
            },
            "lp_token_contract": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ContractInstantiationInfo"
                },
                {
                  "type": "null"
                }
              ]
            },
            "pair_contract": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ContractInstantiationInfo"
                },
                {
                  "type": "null"
                }
              ]
            },
            "snip20_contract": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ContractInstantiationInfo"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      }
    },
    {
      "description": "Instantiates an exchange pair contract",
      "type": "object",
      "required": [
        "create_exchange"
      ],
      "properties": {
        "create_exchange": {
          "type": "object",
          "required": [
            "pair"
          ],
          "properties": {
            "pair": {
              "$ref": "#/definitions/TokenPair_for_HumanAddr"
            }
          }
        }
      }
    },
    {
      "description": "Instantiates an IDO contract",
      "type": "object",
      "required": [
        "create_ido"
      ],
      "properties": {
        "create_ido": {
          "type": "object",
          "required": [
            "info"
          ],
          "properties": {
            "info": {
              "$ref": "#/definitions/InitConfig"
            }
          }
        }
      }
    },
    {
      "description": "Used by a newly instantiated exchange contract to register itself with the factory",
      "type": "object",
      "required": [
        "register_exchange"
      ],
      "properties": {
        "register_exchange": {
          "type": "object",
          "required": [
            "pair",
            "signature"
          ],
          "properties": {
            "pair": {
              "$ref": "#/definitions/TokenPair_for_HumanAddr"
            },
            "signature": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      }
    },
    {
      "description": "Used by a newly instantiated IDO contract to register itself with the factory",
      "type": "object",
      "required": [
        "register_ido"
      ],
      "properties": {
        "register_ido": {
          "type": "object",
          "required": [
            "signature"
          ],
          "properties": {
            "signature": {
              "$ref": "#/definitions/Binary"
            }
          }
        }
      }
    },
    {
      "description": "Adds already created exchanges to the registry. Admin only command.",
      "type": "object",
      "required": [
        "add_exchanges"
      ],
      "properties": {
        "add_exchanges": {
          "type": "object",
          "required": [
            "exchanges"
          ],
          "properties": {
            "exchanges": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Exchange_for_HumanAddr"
              }
            }
          }
        }
      }
    },
    {
      "description": "Adds already created IDO addresses to the registry. Admin only command.",
      "type": "object",
      "required": [
        "add_idos"
      ],
      "properties": {
        "add_idos": {
          "type": "object",
          "required": [
            "idos"
          ],
          "properties": {
            "idos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HumanAddr"
              }
            }
          }
        }
      }
    },
    {
      "type": "object",
      "required": [
        "admin"
      ],
      "properties": {
        "admin": {
          "$ref": "#/definitions/AdminHandleMsg"
        }
      }
    }
  ],
  "definitions": {
    "AdminHandleMsg": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "change_admin"
          ],
          "properties": {
            "change_admin": {
              "type": "object",
              "required": [
                "address"
              ],
              "properties": {
                "address": {
                  "$ref": "#/definitions/HumanAddr"
                }
              }
            }
          }
        }
      ]
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>",
      "type": "string"
    },
    "ContractInstantiationInfo": {
      "description": "Info needed to instantiate a contract.",
      "type": "object",
      "required": [
        "code_hash",
        "id"
      ],
      "properties": {
        "code_hash": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    },
    "ContractStatusLevel": {
      "description": "Possible states of a contract.",
      "type": "string",
      "enum": [
        "Operational",
        "Paused",
        "Migrating"
      ]
    },
    "ExchangeSettings_for_HumanAddr": {
      "type": "object",
      "required": [
        "sienna_fee",
        "swap_fee"
      ],
      "properties": {
        "sienna_burner": {
          "anyOf": [
            {
              "$ref": "#/definitions/HumanAddr"
            },
            {
              "type": "null"
            }
          ]
        },
        "sienna_fee": {
          "$ref": "#/definitions/Fee"
        },
        "swap_fee": {
          "$ref": "#/definitions/Fee"
        }
      }
    },
    "Exchange_for_HumanAddr": {
      "description": "Represents the address of an exchange and the pair that it manages",
      "type": "object",
      "required": [
        "address",
        "pair"
      ],
      "properties": {
        "address": {
          "description": "Address of the contract that manages the exchange.",
          "allOf": [
            {
              "$ref": "#/definitions/HumanAddr"
            }
          ]
        },
        "pair": {
          "description": "The pair that the contract manages.",
          "allOf": [
            {
              "$ref": "#/definitions/TokenPair_for_HumanAddr"
            }
          ]
        }
      }
    },
    "Fee": {
      "type": "object",
      "required": [
        "denom",
        "nom"
      ],
      "properties": {
        "denom": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "nom": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        }
      }
    },
    "HumanAddr": {
      "type": "string"
    },
    "InitConfig": {
      "type": "object",
      "required": [
        "input_token",
        "rate",
        "snip20_init_info"
      ],
      "properties": {
        "input_token": {
          "description": "The token that will be used to buy the instantiated SNIP20",
          "allOf": [
            {
              "$ref": "#/definitions/TokenType_for_HumanAddr"
            }
          ]
        },
        "rate": {
          "$ref": "#/definitions/Uint128"
        },
        "snip20_init_info": {
          "$ref": "#/definitions/Snip20TokenInitInfo"
        }
      }
    },
    "Snip20TokenInitInfo": {
      "description": "Used to provide only the essential info to an IDO that instantiates a snip20 token",
      "type": "object",
      "required": [
        "decimals",
        "name",
        "prng_seed",
        "symbol"
      ],
      "properties": {
        "config": {
          "anyOf": [
            {
              "$ref": "#/definitions/InitConfig"
            },
            {
              "type": "null"
            }
          ]
        },
        "decimals": {
          "type": "integer",
          "format": "uint8",
          "minimum": 0.0
        },
        "name": {
          "type": "string"
        },
        "prng_seed": {
          "$ref": "#/definitions/Binary"
        },
        "symbol": {
          "type": "string"
        }
      }
    },
    "TokenPair_for_HumanAddr": {
      "type": "array",
      "items": [
        {
          "$ref": "#/definitions/TokenType_for_HumanAddr"
        },
        {
          "$ref": "#/definitions/TokenType_for_HumanAddr"
        }
      ],
      "maxItems": 2,
      "minItems": 2
    },
    "TokenType_for_HumanAddr": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "custom_token"
          ],
          "properties": {
            "custom_token": {
              "type": "object",
              "required": [
                "contract_addr",
                "token_code_hash"
              ],
              "properties": {
                "contract_addr": {
                  "$ref": "#/definitions/HumanAddr"
                },
                "token_code_hash": {
                  "type": "string"
                }
              }
            }
          }
        },
        {
          "type": "object",
          "required": [
            "native_token"
          ],
          "properties": {
            "native_token": {
              "type": "object",
              "required": [
                "denom"
              ],
              "properties": {
                "denom": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
    },
    "Uint128": {
      "type": "string"
    }
  }
}
